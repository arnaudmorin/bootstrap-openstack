#!/bin/bash

function create_flavors(){(
    openstack flavor create --vcpus 1 --ram 256  --disk 10 nano
    openstack flavor create --vcpus 1 --ram 1024 --disk 10 small
    openstack flavor create --vcpus 2 --ram 2048 --disk 20 medium
    openstack flavor create --vcpus 4 --ram 4086 --disk 50 large
)}

function create_image_cirros(){(
    [ -f cirros-0.4.0-x86_64-disk.img ] || wget http://download.cirros-cloud.net/0.4.0/cirros-0.4.0-x86_64-disk.img
    openstack image create \
     --file cirros-0.4.0-x86_64-disk.img \
     --disk-format qcow2 \
     --container-format bare \
     --public \
     "cirros"
)}

function create_image_ubuntu(){(
    [ -f bionic-server-cloudimg-amd64.img ] || wget https://cloud-images.ubuntu.com/bionic/current/bionic-server-cloudimg-amd64.img
    openstack image create \
     --file bionic-server-cloudimg-amd64.img \
     --disk-format qcow2 \
     --container-format bare \
     --public \
     "Ubuntu 18.04"
)}

function create_key(){(
    openstack keypair create --public-key ~/.ssh/authorized_keys fake
)}

function create_rules(){(
    openstack security group rule create --ingress --protocol tcp --dst-port 1:65535 default
    openstack security group rule create --ingress --protocol udp --dst-port 1:65535 default
    openstack security group rule create --ingress --protocol icmp                   default
    openstack security group rule create --egress  --protocol tcp --dst-port 1:65535 default
    openstack security group rule create --egress  --protocol udp --dst-port 1:65535 default
    openstack security group rule create --egress  --protocol icmp                   default
)}

function create_server_private(){(
    openstack server create \
     --flavor nano \
     --image cirros \
     --nic net-id=private \
     --key-name fake \
     n1
)}

function create_server_public(){(
    openstack server create \
     --flavor nano \
     --image cirros \
      --nic net-id=public \
     --security-group default \
      --key-name fake \
     p1
)}

function create_floating(){(
    openstack floating ip create public
)}

function attach_floating(){(
    NAME=$1
    IP=$2
    openstack server add floating ip $NAME $IP
)}

function create_network_public(){(
    openstack network create \
     --share \
     --external \
     --provider-physical-network provider \
     --provider-network-type flat \
     public
    openstack subnet create \
     --network public \
     --subnet-range "5.135.0.208/28" \
     --gateway 5.135.0.222 \
     --dns-nameserver 8.8.8.8 \
     "5.135.0.208/28"
)}

function create_network_private(){(
    openstack network create private
    openstack subnet create \
     --network private \
     --subnet-range "192.168.42.0/24" \
     --gateway 192.168.42.1 \
     --dns-nameserver 8.8.8.8 \
     "192.168.42.0/24"
)}

function create_router(){(
    openstack router create router
    openstack router set --external-gateway public router
    openstack router add subnet router 192.168.42.0/24
)}
