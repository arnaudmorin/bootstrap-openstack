#!/bin/bash

# Setup logging stdout + stderr to logfile
log_file="/var/log/postinstall.log"

function log_handler {
  while IFS='' read -r output; do
    echo $output
    echo "$(date) - $output" >> $log_file
  done
}

exec &> >(log_handler)

grep 'backports' /etc/apt/sources.list || echo 'deb http://deb.debian.org/debian buster-backports main contrib non-free' >> /etc/apt/sources.list

# Update packages
export DEBIAN_FRONTEND=noninteractive
apt-get update
apt-get -y install extrepo
extrepo enable openstack_victoria
apt-get update
apt-get -t buster-backports -y install ansible  # we need latest ansible, previous version are failing
apt-get -y install mosh git tmux ifupdown python-os-client-config python-shade

# Deployer will use this key (I named it zob) to connect to other machines
# Note: this is not very secure to use this key because:
# - it is on github without any protection
# - it does not have any password
cat <<EOF >/root/.ssh/id_rsa
-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEA2NeXHQZiLNlzqXuBIhQrGmOm5lJivxsrDKC5eFBudSQnycL8
KFgqAPupgyG8pmcYcavSBsYpaf8kwOlkPbP+aQWoNXFDCZhbnWvT4zpF5dOI4Koe
bUeiPhmfewLwoPdygBAorObm0qsNcTgo+LrXxFLT6BdTrs6jP5ROZmODelSl5/n0
+6Qg+nInwRLOiR4VTb7OTiy6f7TvD2t5CmEDncktMXN64frdpa87ylElhmW1/nS4
hYhKY7FC97Q6s5BDDVJ+KXb+vTibs1hwsUVj33a2PVoNI95iXrD9vRAYbfsPhAvf
5ASqvtVSnZrF1FwHIxL46L1S/JdQa19wWNEfAwIDAQABAoIBAEuC2AatgGap2tM8
RP2/FDt+VFKEggqWxWkCV1QEflKgopJqKjFKcmYhPSiDCRTRdfuvn9XoD+fvh7b+
D4BFO+UKqUbjCDtBKTYqpIDOfCTKgzHpS+s2NNN3TMgjf/Qt91uNRPzg86SNGINC
0VG8jwK47T43UVbgcozjcmHJabGhQFzMY7pfYjONTypbNtjNzkgV+y3+hFIHmDjA
zOOXCLPcLSjyA2jg6FbQ0lpkArckD616D5LnyLDuulUxvEZ9YU0Nm6WdYCH+Upqk
0EdSyb64SCF6jsUL4c0p1WogXn8a83dk7qq0CI7AW5rlIbsLbzmKDLsLKdZJgDlN
NJjttkECgYEA9hn9Edb+RPd3saXU4cje0/pqYD0mwkLL0YJ83vho5s4fgUcYHHlf
YmmUXTdEKc0IiYn/mjnWfv+eNhO8d3oHDqk2VuOPSekx50YQ2Ni+YX/hlObj5+BQ
qy/B1P6vXGXV5s0X71jRYTaWX/+GBE6KQ77lgdCJ5YVYyXmFSbP/tvMCgYEA4ZBU
VL4tVbsPEhMjh0HSR1bTnow26xAQpGZ9g3lqXj4ZEd4d8Gy7UyABAwRRgh2/5g+H
E5skarZwHetNmli5SLv5xqJNIrJvyABYI7NuYvtYTP95qjzQ3/reK3VsXvq8SzcM
o6oya6swRYV2UQjBpvpztF+Q8naw2PqKa35oG7ECgYB5FMhCIrjvTaICMUjP3Xhk
auwzdWLAaQTGi6DMQwO5qugtPsFKIR0g2jk4s5xBxLLSmKa9Rn+V9EXu7T7ouY0H
VZF6pnM1NhprYzmetuTUK4rdK8wtpVuLHfALz1KP7zqSV43TIKvDXIwXpyxUqh+0
vRNGD0gJONY6KiO942WIqQKBgGGOo/q2+jKfIgiGQJKKdGEoe4SSTlpia2A/d7+6
brfuEbe5oqdOz8JHEEj2wC4PoeTmCF0Bd8GzwFAgakL8Zr6/lmtD3SrJlDEjfPuL
6o1i+jDrOfrYLNsCzL5tHf8CYRgC6jOLNB1/P/SBocewitkmb46u2qkTjq95xQ5y
8KIxAoGBAK7hvaqme07Ju34eGytvpS6hspI05QT2gPUvRk/dSkWE+c5AttJLABgn
yTLe9OAE9SbtLJEzpECS9MnmKc3jwtZUHoLkvhiYP0/8n15BsyhJgJ0Sq4lMoUeW
9DHX7RJhmZgHsybDS40ARyUtCq8SdOf32I0W+jRM+obV9dzn9mmE
-----END RSA PRIVATE KEY-----
EOF

chmod 600 /root/.ssh/id_rsa

cat <<EOF >/root/.ssh/id_rsa.pub
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDY15cdBmIs2XOpe4EiFCsaY6bmUmK/GysMoLl4UG51JCfJwvwoWCoA+6mDIbymZxhxq9IGxilp/yTA6WQ9s/5pBag1cUMJmFuda9PjOkXl04jgqh5tR6I+GZ97AvCg93KAECis5ubSqw1xOCj4utfEUtPoF1OuzqM/lE5mY4N6VKXn+fT7pCD6cifBEs6JHhVNvs5OLLp/tO8Pa3kKYQOdyS0xc3rh+t2lrzvKUSWGZbX+dLiFiEpjsUL3tDqzkEMNUn4pdv69OJuzWHCxRWPfdrY9Wg0j3mJesP29EBht+w+EC9/kBKq+1VKdmsXUXAcjEvjovVL8l1BrX3BY0R8D zob
EOF

# Used by ansible to automatically connect to other nodes
cat <<EOF >> /root/.ssh/config
Host *
  StrictHostKeyChecking no
  UserKnownHostsFile=/dev/null
EOF

# Needed by ansible to automatically connect to itself
cat <<EOF >/root/.ssh/authorized_keys
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDY15cdBmIs2XOpe4EiFCsaY6bmUmK/GysMoLl4UG51JCfJwvwoWCoA+6mDIbymZxhxq9IGxilp/yTA6WQ9s/5pBag1cUMJmFuda9PjOkXl04jgqh5tR6I+GZ97AvCg93KAECis5ubSqw1xOCj4utfEUtPoF1OuzqM/lE5mY4N6VKXn+fT7pCD6cifBEs6JHhVNvs5OLLp/tO8Pa3kKYQOdyS0xc3rh+t2lrzvKUSWGZbX+dLiFiEpjsUL3tDqzkEMNUn4pdv69OJuzWHCxRWPfdrY9Wg0j3mJesP29EBht+w+EC9/kBKq+1VKdmsXUXAcjEvjovVL8l1BrX3BY0R8D zob
EOF

# Clone bootstrap repo
cd /root/
git clone https://github.com/arnaudmorin/bootstrap-openstack.git -b victoria

# Configure ansible
mv /etc/ansible/ /etc/ansible.old
ln -s /root/bootstrap-openstack/ansible/ /etc/ansible

# Let ansible use openstack a dynamic inventory
cat <<EOF > /etc/ansible/openstack.yml
clouds:
  ovh:
    auth:
      auth_url: https://auth.cloud.ovh.net/v3/
      username: __OS_USERNAME__
      password: __OS_PASSWORD__
      project_name: __OS_TENANT_NAME__
      user_domain_name: Default
      project_domain_name: Default
    region_name: __OS_REGION_NAME__
ansible:
  use_hostnames: True
  expand_hostvars: False
  fail_on_errors: True
EOF

# Export inventory file
/etc/ansible/dynhosts --list

# Configure network
# eth0 --> Ext-Net interface. Mostly used to access API over regular internet connection
# eth1 --> management interface. Mostly used by some OpenStack services to communicate
# eth2 --> public interface. Used by neutron and compute to handle VM <--> Internet connectivity
cat <<'EOF' > /etc/network/interfaces
auto lo
iface lo inet loopback

auto eth0
iface eth0 inet dhcp

auto eth1
iface eth1 inet dhcp

auto eth2
iface eth2 inet manual
up ip link set dev $IFACE up
up ip link set dev $IFACE mtu 9000
down ip link set dev $IFACE down
EOF

# eth0 is already set up by debian
ifup eth1

# Install plik
curl --output /usr/local/bin/plik https://plik.arno.ovh/clients/linux-amd64/plik
chmod +x /usr/local/bin/plik
cat <<'EOF' > /root/.plikrc
Url = "https://plik.arno.ovh"
EOF

# Configure tmux
cat <<'EOF' > /root/.tmux.conf
unbind-key -a
set-window-option -g xterm-keys on
set-option -g status-attr default
set-option -g status-bg black
set-option -g status-fg green
set-option -g status-interval 1
set-option -g status-justify left
set-option -g status-keys vi
set-option -g status-left "[#S]"                        # Session name on left
set-option -g status-left-attr default
set-option -g status-left-bg default
set-option -g status-left-fg default
set-option -g status-left-length 10
set-option -g status-right "#H [%H:%M:%S %d.%m.%y]"     # Date and host on right
set-option -g status-right-attr default
set-option -g status-right-bg default
set-option -g status-right-fg default
set-option -g status-right-length 40
set-option -g default-terminal "screen-256color"
set-option -g status-position top                       #Â Move status bar to the top
set-option -g renumber-windows on
set-window-option -g window-status-current-attr bright
set-window-option -g aggressive-resize on               # Resize
set-window-option -g mode-keys vi                       # VI mode
set-option -s escape-time 0                             # No wait on escape
unbind C-b
set-option -g prefix C-a
bind-key : command-prompt
bind-key & confirm-before -p "kill-window #W? (y/n)" kill-window
bind-key c new-window  \; rename-window "-"
bind-key -n F2 new-window  \; rename-window "-"
bind-key -n F3 previous-window
bind-key p previous-window
bind-key -n F4 next-window
bind-key n next-window
bind-key -n C-S-F3 swap-window -t :-1
bind-key -n C-S-F4 swap-window -t :+1
bind-key -n F6 detach
bind-key -n S-F6 detach-client -a
bind-key -n F7 copy-mode
bind-key -n M-NPage copy-mode \; send-keys NPage
bind-key -n M-PPage copy-mode \; send-keys PPage
bind-key -n F8 command-prompt -p "(rename-window) " "rename-window '%%'"
bind-key -n C-F8 command-prompt -p "(rename-session) " "rename-session '%%'"
bind-key a last-window
bind-key 0 select-window -t 0
bind-key 1 select-window -t 1
bind-key 2 select-window -t 2
bind-key 3 select-window -t 3
bind-key 4 select-window -t 4
bind-key 5 select-window -t 5
bind-key 6 select-window -t 6
bind-key 7 select-window -t 7
bind-key 8 select-window -t 8
bind-key 9 select-window -t 9
bind-key h split-window -v
bind-key v split-window -h
bind-key -n F1 select-pane -t :.+
bind-key -n S-F1 select-pane -t :.-
bind-key left select-pane -L
bind-key right select-pane -R
bind-key up select-pane -U
bind-key down select-pane -D
bind-key -n S-left select-pane -L
bind-key -n S-right select-pane -R
bind-key -n S-up select-pane -U
bind-key -n S-down select-pane -D
bind-key -n C-space next-layout
bind-key -n M-s set-window-option synchronize-panes
bind-key -n M-z resize-pane -Z
bind-key x confirm-before -p "kill-pane #W? (y/n)" kill-pane
bind-key -n C-S-up resize-pane -U 10
bind-key -n C-S-down resize-pane -D 10
bind-key -n C-S-left resize-pane -L 10
bind-key -n C-S-right resize-pane -R 10
bind-key r source-file ~/.tmux.conf \; display-message "Config reloaded."
set-option -g window-status-format " #{?window_activity_flag, #[fg=colour231]#[blink],#[fg=colour245]}#{?window_bell_flag,#[fg=colour01]#[blink],#[fg=colour245]}#I:#W "
set-option -g monitor-activity on
set -g window-style 'fg=default,bg=colour234'
set -g window-active-style 'fg=default,bg=colour16'
set -g pane-border-bg colour235
set -g pane-border-fg colour238
set -g pane-active-border-bg colour235
set -g pane-active-border-fg colour51
set -g mouse off
EOF

apt-get -y purge cloud-init

echo 'done'
